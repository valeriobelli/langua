name: "Reusable CI workflow"

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
        description: "The package's name for which the CI pipeline should run."

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

  build:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

      - name: Execute
        run: yarn turbo run build:bundle --filter="./packages/${{ inputs.package_name }}/**"

  build-typings:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

      - name: Execute
        run: yarn turbo run build:typings --filter="./packages/${{ inputs.package_name }}/**"

  lint:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

      - name: Execute
        run: yarn turbo run lint --filter="./packages/${{ inputs.package_name }}/**"

  typecheck:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

      - name: Execute
        run: yarn turbo run typecheck --filter="./packages/${{ inputs.package_name }}/**"

  tests:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Setup
        run: yarn install

      - name: Execute
        run: yarn turbo run test --filter="./packages/${{ inputs.package_name }}/**" -- --watch=false
